{"version":3,"sources":["Components/Clock/Clock.tsx","NamesForClock.ts","App.tsx","index.tsx"],"names":["Clock","state","date","timerId","this","setInterval","setState","Date","toLocaleTimeString","console","log","name","props","clearInterval","className","React","Component","names","App","clockName","isClockVisible","showClock","hideClock","setRandomName","Math","floor","random","length","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"iPAWMA,E,4MACJC,MAAQ,CACNC,KAAM,I,EAGRC,a,yDAEA,WAAqB,IAAD,OAClBC,KAAKD,QAAUE,aAAY,WACzB,EAAKC,SAAS,CACZJ,MAAM,IAAIK,MAAOC,uBAGnBC,QAAQC,IAAI,EAAKT,MAAMC,QACtB,O,gCAGL,YAA+C,IAA1BS,EAAyB,EAAzBA,KACfP,KAAKQ,MAAMD,OAASA,GAExBF,QAAQC,IAAR,qCAA0CC,EAA1C,eAAqDP,KAAKQ,MAAMD,S,kCAIlE,WACMP,KAAKD,SACPU,cAAcT,KAAKD,W,oBAIvB,WACE,IAAQD,EAASE,KAAKH,MAAdC,KAER,OACE,sBAAKY,UAAU,QAAf,UACE,mBAAGA,UAAU,aAAb,2BACA,wBAAQ,UAAQ,OAAOA,UAAU,aAAjC,SAA+CZ,W,GApCnCa,IAAMC,WA0CXhB,ICrDFiB,EAAkB,CAC7B,aACA,cACA,eCOIC,E,4MACJjB,MAAQ,CACNkB,UAAW,cACXC,gBAAgB,G,EAGlBC,UAAY,WACV,EAAKf,SAAS,CACZc,gBAAgB,K,EAIpBE,UAAY,WACV,EAAKhB,SAAS,CACZc,gBAAgB,K,EAIpBG,cAAgB,WACd,EAAKjB,SAAS,CACZa,UAAWF,EAAMO,KAAKC,MAAMD,KAAKE,SAAWT,EAAMU,Y,4CAItD,WACE,MAAsCvB,KAAKH,MAAnCmB,EAAR,EAAQA,eAAgBD,EAAxB,EAAwBA,UAExB,OACE,sBAAKL,UAAU,MAAf,UACE,oBAAIA,UAAU,WAAd,SAA0BK,IACzBC,GACC,cAAC,EAAD,CAAOT,KAAMQ,IAEf,wBACES,KAAK,SACLd,UAAU,aACVe,QAASzB,KAAKiB,UAHhB,wBAOA,wBACEO,KAAK,SACLd,UAAU,aACVe,QAASzB,KAAKkB,UAHhB,wBAOA,wBACEM,KAAK,SACLd,UAAU,aACVe,QAASzB,KAAKmB,cAHhB,oC,GA/CUR,IAAMC,WA2DTE,IClEfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.57567374.chunk.js","sourcesContent":["import React from 'react';\nimport './Clock.scss';\n\ntype Props = {\n  name: string,\n};\n\ntype State = {\n  date: string,\n};\n\nclass Clock extends React.Component<Props, State> {\n  state = {\n    date: '',\n  };\n\n  timerId?: NodeJS.Timer;\n\n  componentDidMount() {\n    this.timerId = setInterval(() => {\n      this.setState({\n        date: new Date().toLocaleTimeString(),\n      });\n      // eslint-disable-next-line\n      console.log(this.state.date);\n    }, 1000);\n  }\n\n  componentDidUpdate({ name }: Readonly<Props>) {\n    if (this.props.name !== name) {\n      // eslint-disable-next-line\n    console.log(`The Clock was renamed from ${name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.timerId) {\n      clearInterval(this.timerId);\n    }\n  }\n\n  render() {\n    const { date } = this.state;\n\n    return (\n      <div className=\"clock\">\n        <p className=\"clock-info\">Current time:</p>\n        <strong data-cy=\"time\" className=\"clock-time\">{date}</strong>\n      </div>\n    );\n  }\n}\n\nexport default Clock;\n","export const names: string[] = [\n  'Nice Clock',\n  'Happy Clock',\n  'Hello Clock',\n];\n","import React from 'react';\nimport './App.scss';\nimport Clock from './Components/Clock/Clock';\nimport { names } from './NamesForClock';\n\ntype Props = {\n  clockName: string,\n  isClockVisible: boolean,\n};\n\nclass App extends React.Component<{}, Props> {\n  state = {\n    clockName: 'React clock',\n    isClockVisible: true,\n  };\n\n  showClock = () => {\n    this.setState({\n      isClockVisible: true,\n    });\n  };\n\n  hideClock = () => {\n    this.setState({\n      isClockVisible: false,\n    });\n  };\n\n  setRandomName = () => {\n    this.setState({\n      clockName: names[Math.floor(Math.random() * names.length)],\n    });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1 className=\"app-name\">{clockName}</h1>\n        {isClockVisible && (\n          <Clock name={clockName} />\n        )}\n        <button\n          type=\"button\"\n          className=\"big-button\"\n          onClick={this.showClock}\n        >\n          Show Clock\n        </button>\n        <button\n          type=\"button\"\n          className=\"big-button\"\n          onClick={this.hideClock}\n        >\n          Hide Clock\n        </button>\n        <button\n          type=\"button\"\n          className=\"big-button\"\n          onClick={this.setRandomName}\n        >\n          Set Random Name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}